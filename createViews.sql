CREATE VIEW VIEW_USER_INFORMATION AS
SELECT USER.USER_ID, USER.FIRST_NAME, USER.LAST_NAME,
        USER.YEAR_OF_BIRTH, USER.MONTH_OF_BIRTH, USER.DAY_OF_BIRTH,
        USER.GENDER, CITIES.CITY_NAME, CITIES.COUNTRY_NAME, CITIES.STATE_NAME,
        CITIES.CITY_NAME, CITIES.COUNTRY_NAME, CITIES.STATE_NAME,
        PROGRAMS.INSTITUION, EDUCATION.PROGRAM_YEAR, PROGRAMS.CONCENTRATION,
        PROGRAMS.DEGREE
FROM USERS
;

-- CREATE VIEW VIEW_ARE_FRIENDS AS
-- SELECT * FROM FRIENDS;

-- CREATE VIEW VIEW_PHOTO_INFORMATION AS
-- SELECT ALBUMS.ALBUM_ID, ALBUMS.ALBUM_OWNER_ID, ALBUMS.COVER_PHOTO_ID,
--         ALBUMS.ALBUM_NAME, ALBUMS.ALBUM_CREATED_TIME, ALBUMS.ALBUM_MODIFIED_TIME,
--         ALBUMS.ALBUM_LINK, ALBUMS.ALBUM_VISIBILITY, PHOTOS.PHOTO_ID,
--         PHOTOS.PHOTO_CAPTION, PHOTOS.PHOTO_CREATED_TIME, PHOTOS.PHOTO_MODIFIED_TIME,
--         PHOTOS.PHOTO_LINK
-- FROM ALBUMS
-- INNER JOIN PHOTOS ON ALBUMS.ALBUM_ID=PHOTOS.ALBUM_ID;

-- CREATE VIEW VIEW_EVENT_INFORMATION AS
-- SELECT USER_EVENTS.EVENT_ID, USER_EVENTS.EVENT_CREATOR_ID, USER_EVENTS.EVENT_NAME,
--         USER_EVENTS.EVENT_TAGLINE, USER_EVENTS.EVENT_DESCRIPTION, USER_EVENTS.EVENT_HOST,
--         USER_EVENTS.EVENT_TYPE, USER_EVENTS.EVENT_SUBTYPE, USER_EVENTS.EVENT_ADDRESS,
--         CITIES.CITY_NAME, CITIES.STATE_NAME, CITIES.COUNTRY_NAME, 
--         USER_EVENTS.EVENT_START_TIME, USER_EVENTS.EVENT_END_TIME
-- FROM USER_EVENTS
-- INNER JOIN CITIES ON USER_EVENTS.EVENT_CITY_ID=CITIES.CITY_ID;

-- CREATE VIEW VIEW_TAG_INFORMATION AS
-- SELECT * FROM TAGS;
